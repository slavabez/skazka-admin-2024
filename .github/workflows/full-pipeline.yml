name: Build project, unit test, compile, run e2e tests, deploy

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

jobs:
  build-and-test:
    runs-on: [self-hosted, linux]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: test-db
          POSTGRES_USER: e2e-user
          POSTGRES_PASSWORD: e2e-password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install NPM dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

      - name: Build
        run: npm run build

      - name: Run Playwright tests
        run: npm run test:e2e
        env:
          DATABASE_URL: postgresql://e2e-user:e2e-password@postgres:5432/test-db
          REDIS_HOST: redis
          REDIS_PORT: 6379
          PORT: 3000
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          AUTH_SECRET: test-secret-string
          ODATA_API_URL: ${{ secrets.ODATA_API_URL }}
          ODATA_API_AUTH_HEADER: ${{ secrets.ODATA_API_AUTH_HEADER }}
          NEXT_PUBLIC_FILE_URL: ${{ secrets.NEXT_PUBLIC_FILE_URL }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: skazka-admin-2024:latest
          build-args: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            AUTH_SECRET=Secret$tring

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        if: success()
        with:
          registry: git.ipbez.kz
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push Docker image
        uses: docker/build-push-action@v5
        if: success()
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: git.ipbez.kz/slavabez/skazka-admin-2024:latest
